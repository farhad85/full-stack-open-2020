{"version":3,"sources":["components/Person/index.jsx","components/Persons/index.jsx","components/Filter/index.jsx","components/PersonForm/index.jsx","components/Notification/index.jsx","services/persons.js","App.js","index.js"],"names":["Person","person","onDelete","name","number","onClick","window","confirm","id","Persons","search","persons","filteredPerson","filter","x","toLowerCase","includes","map","v","Filter","setSearch","onChange","e","target","value","PersonForm","onSubmit","setNewName","newName","newNumber","setNewNumber","type","Notification","message","isError","className","api","getAll","axios","get","baseUrl","create","data","post","delete","put","App","useState","setPersons","notification","setNotification","showNotification","setTimeout","useEffect","personService","then","response","clearTheForm","preventDefault","index","personsIndex","findIndex","newPersons","catch","p","i","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a31c0d28.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({ person, onDelete }) => {\r\n  const handleDelete = () => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      onDelete(person.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <p>\r\n      {person.name} {person.number}{\" \"}\r\n      <button onClick={handleDelete}>delete</button>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport Person from \"../Person\";\r\n\r\nconst Persons = ({ search, persons, onDelete }) => {\r\n  let filteredPerson = persons;\r\n  if (search) {\r\n    filteredPerson = persons.filter((x) =>\r\n      x.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  }\r\n\r\n  return filteredPerson.map((v) => (\r\n    <Person key={v.id} person={v} onDelete={onDelete} />\r\n  ));\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ setSearch, search }) => {\r\n  return (\r\n    <div>\r\n      filter shown with:{\" \"}\r\n      <input onChange={(e) => setSearch(e.target.value)} value={search} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  onSubmit,\r\n  setNewName,\r\n  newName,\r\n  newNumber,\r\n  setNewNumber,\r\n}) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name:\r\n        <input onChange={(e) => setNewName(e.target.value)} value={newName} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input\r\n          onChange={(e) => setNewNumber(e.target.value)}\r\n          value={newNumber}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import \"./style.css\";\r\n\r\nconst Notification = ({ message, isError }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n\r\n  const className = isError ? \"error\" : \"success\";\r\n\r\n  return <div className={\"notification \" + className}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\nconst baseUrl = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst api = {\r\n    getAll: () => {\r\n        return axios.get(baseUrl + 'persons');\r\n    },\r\n    create: data => {\r\n        return axios.post(baseUrl + 'persons', data);\r\n    },\r\n    delete: id => {\r\n        return axios.delete(baseUrl + 'person/' + id);\r\n    },\r\n    put: (id, data) => {\r\n        return axios.put(baseUrl + 'person/' + id, data);\r\n    }\r\n};\r\n\r\n\r\nexport default api;\r\n","import React, { useEffect, useState } from 'react';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [notification, setNotification] = useState();\n\n  const showNotification = (message, isError) => {\n    setNotification({ message, isError });\n    setTimeout(() => setNotification(), 3000);\n  };\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => setPersons(response.data));\n  }, []);\n\n  const clearTheForm = () => {\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const update = (index) => {\n    if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      setPersons(x => {\n        const newPersons = [...x];\n        newPersons[index].number = newNumber;\n        return newPersons;\n      });\n      personService\n        .put(persons[index].id, { name: newName, number: newNumber })\n        .then(() => showNotification(`Updated ${newName}`))\n        .catch(() => {\n          showNotification(`Information of ${newName} has already been removed from server`, true);\n          setPersons(x => x.filter((p, i) => i !== index));\n        });\n\n      clearTheForm();\n    }\n  };\n\n  const create = () => {\n    const id = persons[persons.length - 1].id + 1;\n    setPersons(x => ([...x, { name: newName, number: newNumber, id }]));\n    personService\n      .create({ name: newName, number: newNumber, id })\n      .then(() => showNotification(`Added ${newName}`));\n    clearTheForm();\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const personsIndex = persons.findIndex(x => x.name === newName);\n    if (personsIndex >= 0) {\n      update(personsIndex);\n    }\n    else {\n      create();\n    }\n  };\n\n  const handleDelete = (id) => {\n    setPersons(x => x.filter(p => p.id !== id));\n    personService\n      .delete(id);\n  };\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification?.message} isError={notification?.isError} />\n      <Filter search={search} setSearch={setSearch} />\n      <h3>add a new</h3>\n      <PersonForm\n        onSubmit={handleSubmit}\n        newNumber={newNumber}\n        newName={newName}\n        setNewNumber={setNewNumber}\n        setNewName={setNewName}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={search} onDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}